#ifndef MACROS_H
#define MACROS_H

#define SHMEM_AICORE_KERNEL __global__ __aicore__
#define SHMEM_AICORE_INLINE __aicore__ __inline__

#define STATE_SCALAR_INVALID -1

#define SHM_MAX_CORES_PER_RANK 32
#define SHM_MAX_RANKS 2048
#define SHM_MAX_TEAMS 32

/* arch related */
#define SCALAR_DATA_CACHELINE_SIZE 64
#define L2_CACHELINE_SIZE 512

#define SHMEM_PAGE_SIZE (1024UL * 1024UL * 2)

#define ALIGH_TO(size, page) ((size + page - 1) / page * page)

/* synchonization related */ 
#define SYNCBIT_SIZE SCALAR_DATA_CACHELINE_SIZE

// L1
#define SYNC_ARRAY_SIZE_L1 (SYNCBIT_SIZE * SHM_MAX_CORES_PER_RANK)
#define SYNC_COUNTER_SIZE_L1 SYNCBIT_SIZE

// L2
#define SYNC_ARRAY_SIZE_L2 (SYNCBIT_SIZE * SHM_MAX_RANKS)
#define SYNC_COUNTER_SIZE_L2 SYNCBIT_SIZE
#define SA_POOL_SIZE_L2 (SYNC_ARRAY_SIZE_L2 * SHM_MAX_TEAMS)
#define SC_POOL_SIZE_L2 (SYNC_COUNTER_SIZE_L2 * SHM_MAX_TEAMS)

// Total extra
#define SHMEM_EXTRA_SIZE_UNALIGHED (SYNC_ARRAY_SIZE_L1 + SA_POOL_SIZE_L2)
#define SHMEM_EXTRA_SIZE ALIGH_TO(SHMEM_EXTRA_SIZE_UNALIGHED, SHMEM_PAGE_SIZE)

#endif