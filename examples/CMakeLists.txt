# Copyright (c) 2025 Huawei Technologies Co., Ltd.
# This file is a part of the CANN Open Software.
# Licensed under CANN Open Software License Agreement Version 1.0 (the "License").
# Please refer to the License for details. You may not use this file except in compliance with the License.
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE.
# See LICENSE in the root of the software repository for the full text of the License.
add_custom_target(catcoc_examples)

function(catcoc_example_add_executable TARGET)
    set(OPTIONS)
    set(ONE_VALUE_ARGS)
    set(MULTI_VALUE_ARGS SOURCES INCLUDES)

    cmake_parse_arguments(
        ARG_PARSE
        "${OPTIONS}"
        "${ONE_VALUE_ARGS}"
        "${MULTI_VALUE_ARGS}"
        ${ARGN}
    )
    set(KERNEL_SOURCES)
    foreach(SOURCE ${ARG_PARSE_SOURCES})
        if(NOT IS_ABSOLUTE ${SOURCE})
            get_filename_component(SOURCE ${SOURCE} ABSOLUTE BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
        endif()
        list(APPEND KERNEL_SOURCES ${SOURCE})
    endforeach()

    set(INCLUDE_DIRS "")
    foreach(INCLUDES ${ARG_PARSE_INCLUDES})
        if(NOT IS_ABSOLUTE ${DIR})
            get_filename_component(INCLUDES ${INCLUDES} ABSOLUTE BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
        endif()
        list(APPEND INCLUDE_DIRS -I${INCLUDES})
    endforeach()

    add_custom_command(
        OUTPUT ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${TARGET}
        COMMAND ${CCEC} -O2  -std=c++17 -xcce --cce-aicore-arch=dav-c220
                        -mllvm -cce-aicore-stack-size=0x8000
                        -mllvm -cce-aicore-function-stack-size=0x8000
                        -mllvm -cce-aicore-record-overflow=true
                        -mllvm -cce-aicore-addr-transform
                        -mllvm -cce-aicore-dcci-insert-for-scalar=false
                        # -DL2_CACHE_HINT
                        -MD -MF ${CMAKE_CURRENT_BINARY_DIR}/${TARGET}.d
                        -I${CMAKE_SOURCE_DIR}/include
                        -I${CMAKE_SOURCE_DIR}/3rdparty/catlass/include
                        -I${CMAKE_SOURCE_DIR}/examples
                        -I${ASCEND_HOME_PATH}/include
                        -I${ASCEND_HOME_PATH}/compiler/ascendc/include/basic_api
                        -I${ASCEND_HOME_PATH}/compiler/ascendc/include/basic_api/impl
                        -I${ASCEND_HOME_PATH}/compiler/ascendc/include/basic_api/interface
                        -I${ASCEND_HOME_PATH}/compiler/ascendc/include/highlevel_api
                        -I${ASCEND_HOME_PATH}/include/experiment/runtime
                        -I${ASCEND_HOME_PATH}/include/experiment/msprof
                        -I${SHMEM_HOME_PATH}/shmem/include
                        -I${SHMEM_HOME_PATH}/memfabric_hybrid/include/smem/host
                        -I${SHMEM_HOME_PATH}/memfabric_hybrid/include/smem/device
                        ${INCLUDE_DIRS}
                        -L${ASCEND_HOME_PATH}/lib64
                        -L${SHMEM_HOME_PATH}/memfabric_hybrid/lib
                        -L${SHMEM_HOME_PATH}/shmem/lib
                        -lruntime -lstdc++ -lascendcl
                        -lmf_smem -lmf_hybm_core -lshmem
                        ${KERNEL_SOURCES} -o ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${TARGET}
        DEPENDS ${KERNEL_SOURCES}
        DEPFILE ${CMAKE_CURRENT_BINARY_DIR}/${TARGET}.d
        VERBATIM
        COMMENT "Generating executable kernel ${TARGET}"
    )

    add_custom_target(
        ${TARGET}
        DEPENDS ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${TARGET}
    )
    add_dependencies(catcoc_examples ${TARGET})
endfunction()

foreach(EXAMPLE
    00_matmul_allreduce
    01_allgather_matmul
    02_matmul_reduce_scatter
    dynamic_tiling
)
    add_subdirectory(${EXAMPLE})
endforeach()
